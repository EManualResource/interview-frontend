{
    "type": "reply",
    "tag": "javascript",
    "difficulty": "1",
    "from": "https://github.com/qiu-deqing/fe-interview",
    "description": "<p>请评价以下事件监听器代码并给出改进意见</p>\n",
    "answer": "<pre><code>if (window.addEventListener) {\n  var addListener = function (el, type, listener, useCapture) {\n    el.addEventListener(type, listener, useCapture);\n  };\n}\nelse if (document.all) {\n  addListener = function (el, type, listener) {\n    el.attachEvent(&#39;on&#39; + type, function () {\n      listener.apply(el);\n    });\n  };\n}\n</code></pre><p>作用：浏览器功能检测实现跨浏览器DOM事件绑定</p>\n<p>优点：</p>\n<ol>\n<li>测试代码只运行一次，根据浏览器确定绑定方法</li>\n<li>通过<code>listener.apply(el)</code>解决IE下监听器this与标准不一致的地方</li>\n<li>在浏览器不支持的情况下提供简单的功能，在标准浏览器中提供捕获功能</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>document.all作为IE检测不可靠，应该使用if(el.attachEvent)</li>\n<li>addListener在不同浏览器下API不一样</li>\n<li><code>listener.apply</code>使this与标准一致但监听器无法移除</li>\n<li>未解决IE下listener参数event。 target问题</li>\n</ol>\n<p>改进:</p>\n<pre><code>var addListener;\n\nif (window.addEventListener) {\n  addListener = function (el, type, listener, useCapture) {\n    el.addEventListener(type, listener, useCapture);\n    return listener;\n  };\n}\nelse if (window.attachEvent) {\n  addListener = function (el, type, listener) {\n    // 标准化this，event，target\n    var wrapper = function () {\n      var event = window.event;\n      event.target = event.srcElement;\n      listener.call(el, event);\n    };\n\n    el.attachEvent(&#39;on&#39; + type, wrapper);\n    return wrapper;\n    // 返回wrapper。调用者可以保存，以后remove\n  };\n}\n</code></pre>",
    "options": []
}