{
    "type": "reply",
    "tag": "javascript",
    "difficulty": "1",
    "from": "https://github.com/qiu-deqing/fe-interview",
    "description": "<p>编写javascript深度克隆函数deepClone</p>\n",
    "answer": "<p>function deepClone(obj) {\n        var _toString = Object.prototype.toString;</p>\n<pre><code>    // null, undefined, non-object, function\n    if (!obj || typeof obj !== &#39;object&#39;) {\n        return obj;\n    }\n\n    // DOM Node\n    if (obj.nodeType &amp;&amp; &#39;cloneNode&#39; in obj) {\n        return obj.cloneNode(true);\n    }\n\n    // Date\n    if (_toString.call(obj) === &#39;[object Date]&#39;) {\n        return new Date(obj.getTime());\n    }\n\n    // RegExp\n    if (_toString.call(obj) === &#39;[object RegExp]&#39;) {\n        var flags = [];\n        if (obj.global) { flags.push(&#39;g&#39;); }\n        if (obj.multiline) { flags.push(&#39;m&#39;); }\n        if (obj.ignoreCase) { flags.push(&#39;i&#39;); }\n\n        return new RegExp(obj.source, flags.join(&#39;&#39;));\n    }\n\n    var result = Array.isArray(obj) ? [] :\n        obj.constructor ? new obj.constructor() : {};\n\n    for (var key in obj ) {\n        result[key] = deepClone(obj[key]);\n    }\n\n    return result;\n}\n\nfunction A() {\n    this.a = a;\n}\n\nvar a = {\n    name: &#39;qiu&#39;,\n    birth: new Date(),\n    pattern: /qiu/gim,\n    container: document.body,\n    hobbys: [&#39;book&#39;, new Date(), /aaa/gim, 111]\n};\n\nvar c = new A();\nvar b = deepClone(c);\nconsole.log(c.a === b.a);\nconsole.log(c, b);\n</code></pre>",
    "options": []
}