{
    "type": "reply",
    "tag": "javascript",
    "difficulty": "1",
    "from": "https://github.com/qiu-deqing/fe-interview",
    "description": "<p>解析一个完整的url,返回Object包含域与window.location相同</p>\n",
    "answer": "<pre><code>/**\n * 解析一个url并生成window.location对象中包含的域\n * location:\n * {\n *      href: &#39;包含完整的url&#39;,\n *      origin: &#39;包含协议到pathname之前的内容&#39;,\n *      protocol: &#39;url使用的协议，包含末尾的:&#39;,\n *      username: &#39;用户名&#39;, // 暂时不支持\n *      password: &#39;密码&#39;,  // 暂时不支持\n *      host: &#39;完整主机名，包含:和端口&#39;,\n *      hostname: &#39;主机名，不包含端口&#39;\n *      port: &#39;端口号&#39;,\n *      pathname: &#39;服务器上访问资源的路径/开头&#39;,\n *      search: &#39;query string，?开头&#39;,\n *      hash: &#39;#开头的fragment identifier&#39;\n * }\n *\n * @param {string} url 需要解析的url\n * @return {Object} 包含url信息的对象\n */\nfunction parseUrl(url) {\n    var result = {};\n    var keys = [&#39;href&#39;, &#39;origin&#39;, &#39;protocol&#39;, &#39;host&#39;,\n                &#39;hostname&#39;, &#39;port&#39;, &#39;pathname&#39;, &#39;search&#39;, &#39;hash&#39;];\n    var i, len;\n    var regexp = /(([^:]+:)\\/\\/(([^:\\/\\?#]+)(:\\d+)?))(\\/[^?#]*)?(\\?[^#]*)?(#.*)?/;\n\n    var match = regexp.exec(url);\n\n    if (match) {\n        for (i = keys.length - 1; i &gt;= 0; --i) {\n            result[keys[i]] = match[i] ? match[i] : &#39;&#39;;\n        }\n    }\n\n    return result;\n}\n</code></pre>",
    "options": []
}