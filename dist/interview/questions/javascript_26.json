{
    "type": "reply",
    "tag": "javascript",
    "difficulty": "1",
    "from": "https://github.com/qiu-deqing/fe-interview",
    "description": "<p>现有一个Page类,其原型对象上有许多以post开头的方法(如postMsg);另有一拦截函数chekc,只返回ture或false.请设计一个函数,该函数应批量改造原Page的postXXX方法,在保留其原有功能的同时,为每个postXXX方法增加拦截验证功能,当chekc返回true时继续执行原postXXX方法,返回false时不再执行原postXXX方法</p>\n",
    "answer": "<pre><code>function Page() {}\n\nPage.prototype = {\n  constructor: Page,\n\n  postA: function (a) {\n    console.log(&#39;a:&#39; + a);\n  },\n  postB: function (b) {\n    console.log(&#39;b:&#39; + b);\n  },\n  postC: function (c) {\n    console.log(&#39;c:&#39; + c);\n  },\n  check: function () {\n    return Math.random() &gt; 0.5;\n  }\n}\n\nfunction checkfy(obj) {\n  for (var key in obj) {\n    if (key.indexOf(&#39;post&#39;) === 0 &amp;&amp; typeof obj[key] === &#39;function&#39;) {\n      (function (key) {\n        var fn = obj[key];\n        obj[key] = function () {\n          if (obj.check()) {\n            fn.apply(obj, arguments);\n          }\n        };\n      }(key));\n    }\n  }\n} // end checkfy()\n\ncheckfy(Page.prototype);\n\nvar obj = new Page();\n\nobj.postA(&#39;checkfy&#39;);\nobj.postB(&#39;checkfy&#39;);\nobj.postC(&#39;checkfy&#39;);\n</code></pre>",
    "options": []
}