{
    "type": "reply",
    "tag": "javascript",
    "difficulty": "1",
    "from": "https://github.com/qiu-deqing/fe-interview",
    "description": "<p>mouseover/mouseout与mouseenter/mouseleave的区别与联系</p>\n",
    "answer": "<ol>\n<li>mouseover/mouseout是标准事件，<strong>所有浏览器都支持</strong>；mouseenter/mouseleave是IE5.5引入的特有事件后来被DOM3标准采纳，现代标准浏览器也支持</li>\n<li>mouseover/mouseout是<strong>冒泡</strong>事件；mouseenter/mouseleave<strong>不冒泡</strong>。需要为<strong>多个元素监听鼠标移入/出事件时，推荐mouseover/mouseout托管，提高性能</strong></li>\n<li>标准事件模型中event.target表示发生移入/出的元素,<strong>vent.relatedTarget</strong>对应移出/如元素；在老IE中event.srcElement表示发生移入/出的元素，<strong>event.toElement</strong>表示移出的目标元素，<strong>event.fromElement</strong>表示移入时的来源元素</li>\n</ol>\n<p>例子：鼠标从div#target元素移出时进行处理，判断逻辑如下：</p>\n<pre><code>&lt;div id=&quot;target&quot;&gt;&lt;span&gt;test&lt;/span&gt;&lt;/div&gt;\n\n&lt;script type=&quot;text/javascript&quot;&gt;\nvar target = document.getElementById(&#39;target&#39;);\nif (target.addEventListener) {\n  target.addEventListener(&#39;mouseout&#39;, mouseoutHandler, false);\n} else if (target.attachEvent) {\n  target.attachEvent(&#39;onmouseout&#39;, mouseoutHandler);\n}\n\nfunction mouseoutHandler(e) {\n  e = e || window.event;\n  var target = e.target || e.srcElement;\n\n  // 判断移出鼠标的元素是否为目标元素\n  if (target.id !== &#39;target&#39;) {\n    return;\n  }\n\n  // 判断鼠标是移出元素还是移到子元素\n  var relatedTarget = event.relatedTarget || e.toElement;\n  while (relatedTarget !== target\n    &amp;&amp; relatedTarget.nodeName.toUpperCase() !== &#39;BODY&#39;) {\n    relatedTarget = relatedTarget.parentNode;\n  }\n\n  // 如果相等，说明鼠标在元素内部移动\n  if (relatedTarget === target) {\n    return;\n  }\n\n  // 执行需要操作\n  //alert(&#39;鼠标移出&#39;);\n\n}\n&lt;/script&gt;\n</code></pre>",
    "options": []
}