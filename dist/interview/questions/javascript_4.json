{
    "type": "reply",
    "tag": "javascript",
    "difficulty": "1",
    "from": "https://github.com/qiu-deqing/fe-interview",
    "description": "mouseover/mouseout与mouseenter/mouseleave的区别与联系",
    "answer": "1. mouseover/mouseout是标准事件，**所有浏览器都支持**；mouseenter/mouseleave是IE5.5引入的特有事件后来被DOM3标准采纳，现代标准浏览器也支持\n2. mouseover/mouseout是**冒泡**事件；mouseenter/mouseleave**不冒泡**。需要为**多个元素监听鼠标移入/出事件时，推荐mouseover/mouseout托管，提高性能**\n3. 标准事件模型中event.target表示发生移入/出的元素,**vent.relatedTarget**对应移出/如元素；在老IE中event.srcElement表示发生移入/出的元素，**event.toElement**表示移出的目标元素，**event.fromElement**表示移入时的来源元素\n\n例子：鼠标从div#target元素移出时进行处理，判断逻辑如下：\n\n    <div id=\"target\"><span>test</span></div>\n\n    <script type=\"text/javascript\">\n    var target = document.getElementById('target');\n    if (target.addEventListener) {\n      target.addEventListener('mouseout', mouseoutHandler, false);\n    } else if (target.attachEvent) {\n      target.attachEvent('onmouseout', mouseoutHandler);\n    }\n\n    function mouseoutHandler(e) {\n      e = e || window.event;\n      var target = e.target || e.srcElement;\n\n      // 判断移出鼠标的元素是否为目标元素\n      if (target.id !== 'target') {\n        return;\n      }\n\n      // 判断鼠标是移出元素还是移到子元素\n      var relatedTarget = event.relatedTarget || e.toElement;\n      while (relatedTarget !== target\n        && relatedTarget.nodeName.toUpperCase() !== 'BODY') {\n        relatedTarget = relatedTarget.parentNode;\n      }\n\n      // 如果相等，说明鼠标在元素内部移动\n      if (relatedTarget === target) {\n        return;\n      }\n\n      // 执行需要操作\n      //alert('鼠标移出');\n\n    }\n    </script>",
    "options": []
}